#!/bin/bash
#_   _ _____ ___________   _____  ___
#| | | |_   _/  ___| ___ \ /  ___|/ _ \
#| |_| | | | \ `--.| |_/ / \ `--./ /_\ \
#|  _  | | |  `--. \  __/   `--. \  _  |
#| | | |_| |_/\__/ / |     /\__/ / | | |
#\_| |_/\___/\____/\_|     \____/\_| |_/
#Author	: Renier Rousseau
#Created Date 	: June 2018
#"Usage: the script is designed to called from a (or the existing) backup script,
# so as to test and verify the backup that has just taken place, and/or to be
# called standalone to test a particular backup file - in either case, the
# script is called and passed a variable of the backup file absolute path.
# If no variable or filename is passed, then the script will build a tree
# of the current location, and all subfolders, and begin iterating through
# all found backup files and testing each one.
# As it works, it logs the process as it goes, to the /tmp folder..."

#Syntax: backup_test [optional switches] backupfilename

#TODO add a option to specify the backup.conf file.
#TODO add a check on the backup.conf file lookup.

#Functions
usage() {
  echo "Usage: backup_test [options] <file/folder name>"
  echo " -a --all : All file and folders in the current folder.( $(pwd) )"
  echo " -h --help : Print this Message."
  echo " If there is no options or file/folder passed the current content "
  echo "  of this folder will be tested."
  exit 1
}

#Varriables
## Flags and arguments
all_flag=0
dir_flag=0
dir_name=''
file_flag=0
file_name=''

## System Variables
### backup config file
conf_file="~/backup.conf"
conf_file_flag=0


#while loop for Usage
while [ "$1" != "" ]; do
  case $1 in
    -a | --all )
    all_flag=1
    ;;
    -h | --help )
    usage
    ;;
    * )
    if [[ $dir_flag == 0 && $file_flag == 0 ]]; then
      #test if $1 is a file
      if [[ -f "$1" ]]; then
        echo "File $1 found and will be tested."
        file_flag=1
        file_name=$1
        #test if $1 is a direcory
      elif [[ -d "$1" ]]; then
        echo "Folder $1 found and the content will be tested."
        dir_flag=1
        dir_name=$1
      else
        echo "File/Folder $1 not found."
        usage
      fi
    else
      if [[ $dir_flag == 1 ]]; then
        echo "The folder $dir_name has already been listed for testing"
        echo " currently there is no support for multiple folders"
      elif [[ $file_flag == 1 ]]; then
        echo "The file $file_name has already been listed for testing "
        echo " currently there is no support for listing multiple files "
        echo " you can how ever specify the folder if both files lie in the"
        echo " same folder. i.e /path/to"
      fi
    fi
  esac
  shift
done

#catch all if no folder/file was specifed
if [[ $dir_flag == 0 && $file_flag == 0 ]]; then
  dir_flag=1
  dir_name=$(pwd)
  echo "Folder $dir_name will be tested."
fi

#Read the backup.conf file
source ~/backup.conf

#build the dir structure for working in. then destroy it.
##Varriables
### test_dir will be a hidden file in them with a data stamp
test_dir="/tmp/.db_test_$dateinfo"

## Creating the base folder
mkdir $test_dir

#Testing for file
if [[ file_flag == 1 ]]; then
  #working with that specific files
  echo "File"
  echo "File name = $file_name"
elif [[ dir_flag == 1 ]]; then
  #working with that specific files
  echo "Folder"
  echo "Folder name = $dir_name"
else
  #working in current direcory
  echo "Current Folder"
  echo "Files :"
  find . -maxdepth 1 -type f
fi
#TODO - Unzip backup file and all contents into the /tmp folder
#TODO - Create temp database, upload the backup data into it.
#TODO - Cleanup

## Destroy folder structure from base folder
rm -R $test_dir
