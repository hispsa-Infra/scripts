#!/bin/bash
#_   _ _____ ___________   _____  ___
#| | | |_   _/  ___| ___ \ /  ___|/ _ \
#| |_| | | | \ `--.| |_/ / \ `--./ /_\ \
#|  _  | | |  `--. \  __/   `--. \  _  |
#| | | |_| |_/\__/ / |     /\__/ / | | |
#\_| |_/\___/\____/\_|     \____/\_| |_/
#Run relavent scripts
#Author	: Renier Rousseau
#Created Date 	: November 2017

#check if there is an arugument if there is use it as the .conf otherwise
#use the generic location.
if [ $# -ne 1 ] ; then
  #read the conf from the comand line.
  source $1
else
  #Review the .conf file local specified Varriables
  source ~/autoSQL.conf
fi

{
  #Header
  echo "---------------------------------------------------------------------"
  echo "      HISP SOUTH AFRICA - autoSQL Script - Ver 1.0 - October 2017"
  echo "---------------------------------------------------------------------"
  echo ""

  #Timestamp
  timeinfo=`date '+%Y-%m-%d %H:%M:%S'`
  echo "$timeinfo > ** Starting Collecting Scripts **"

  #cycle through the databases
  for str_database in "${databases_ls[@]}"; do
    #Time Stamp for each Database
    timeinfo=`date '+%Y-%m-%d %H:%M:%S'`
    echo "$timeinfo > Database: $str_database ---------------->"

    #get all .sql files in the database folder
    script_ls=($(ls $db_ls_folder$str_database | grep sql))
    #cycle through all the .sql files and excute the against the db the folder
    # is named for.
    for str_script in "${script_ls[@]}"; do
      #Time Stamp for each Script
      timeinfo=`date '+%Y-%m-%d %H:%M:%S'`
      echo "$timeinfo > Script: $str_script ---------------->"

      #execute script
      echo "psql -f $db_ls_folder$str_database/$str_script $str_database"
      ls -lha $db_ls_folder$str_database/$str_script
      psql -f $db_ls_folder$str_database/$str_script $str_database

      #Time Stamp for each Script
      timeinfo=`date '+%Y-%m-%d %H:%M:%S'`
      echo "$timeinfo > Script: $str_script Done"
    done

    #Time Stamp for each Database
    timeinfo=`date '+%Y-%m-%d %H:%M:%S'`
    echo "$timeinfo > Database: $str_database Done"
  done

} 2>&1 | tee $logfile
