#!/bin/bash
#_   _ _____ ___________   _____  ___
#| | | |_   _/  ___| ___ \ /  ___|/ _ \
#| |_| | | | \ `--.| |_/ / \ `--./ /_\ \
#|  _  | | |  `--. \  __/   `--. \  _  |
#| | | |_| |_/\__/ / |     /\__/ / | | |
#\_| |_/\___/\____/\_|     \____/\_| |_/
#Runs Analytics for dhis2 remotely.
#Author	: Thato Mafoko
#Created Date 	: May 2018

#TODO: Add error checking for html codes.

#Usage Tags for arguments
usage() {
  echo "Usage: $PROG [options]"
  echo " -h     Target host url i.e. www.example.org/dhis2 - Mandatory"
  echo " -u     User Name (Default admin)"
  echo " -p     User Password (Default district)"
}

#Default Vaules
inst=fail
user=admin
password=district
host=$(hostname)


#While loop to populate varrible
while getopts ":h:u:p:" opt;
do
  case $opt in
    h)
      inst=$OPTARG;
      ;;
    u)
      user=$OPTARG;
      ;;
    p)
      password=$OPTARG;
      ;;
    \?)
      echo "Invalid option -$opt" >&2
      exit 1;
      ;;
    :)
      echo "Option -$opt requires an argument." >&2
      exit 1
  esac
done

#Close if no host is specified
if [[ $inst = fail ]]; then
  echo "Error target URL not specified"
  usage
  exit 1
fi

# Run analytics for the specified instance.
output=$(curl -s -u $user:$password -X POST https://$inst/api/resourceTables/analytics)

#Num equals the number of times "OK" occurs in the output.
num=$(echo $output | grep -c '"status":"OK","message":"Initiated analytics')

#Produce output.
if [ $num -gt 0 ]
then
	#If num is greater than 1, then the it is assumed to be successful.
	echo "SUCCESS: Analytics for $inst ran successfully."
else
	#Anything less than 1 is assumed to be unsuccsessful.
	echo "ERROR: Analytics for $inst failed.
	
	$output"
	
fi
	
